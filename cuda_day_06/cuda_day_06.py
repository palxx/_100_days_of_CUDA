# -*- coding: utf-8 -*-
"""cuda_day_06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sUi2lKVq4vUlfBQWz9uScDsnd8SmIimZ
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile cuda_day_06.cu

# Commented out IPython magic to ensure Python compatibility.
# %%writefile cuda_day_06.cu
# #include <stdio.h>
# #include <cuda_runtime.h>
# 
# __global__ void array_increment(int* in) {
# 	const int threadIndex = threadIdx.x;
# 	in[threadIndex] = in[threadIndex] + 1;
# }
# 
# void printArray(int* array, int arraySize) {
# 	printf("[");
# 	for (int i = 0; i < arraySize; i++) {
# 		printf("%d", array[i]);
# 		if (i < arraySize - 1) {
# 			printf(", ");
# 		}
# 	}
# 	printf("]\n");
# }
# 
# int main() {
# 	const int arraySize = 10;
# 
# 	// Allocate host memory for the input array
# 	int* array = (int*)malloc(arraySize * sizeof(int));
# 
# 	// Initialize the input array
# 	for (int i = 0; i < arraySize; i++) {
# 		array[i] = i*10;
# 	}
# 
# 	printf("Before: ");
# 	printArray(array, arraySize);
# 
# 	// Allocate GPU memory for the input array
# 	int* d_array;
# 	cudaMalloc((void**)&d_array, arraySize * sizeof(int));
# 
# 	// Copy the input array from host memory to GPU memory
# 	cudaMemcpy(d_array, array, arraySize * sizeof(int), cudaMemcpyHostToDevice);
# 
# 	array_increment<<<1, arraySize>>>(d_array);
# 
# 	// Copy the result array from GPU memory back to host memory
# 	cudaMemcpy(array, d_array, arraySize * sizeof(int), cudaMemcpyDeviceToHost);
# 
# 	printf("After: ");
# 	printArray(array, arraySize);
# 
# 	// Free the host and GPU memory
# 	free(array);
# 	cudaFree(d_array);
# 	return 0;
# }

!nvcc -arch=sm_75 cuda_day_06.cu -o cuda_day_06

!./cuda_day_06

# Commented out IPython magic to ensure Python compatibility.
# %%writefile cuda_day_06.cu
# #include <stdio.h>
# #include <cuda_runtime.h>
# 
# 
# __global__ void warp_roll_call() {
# 
# 	const int threadIndex = threadIdx.x;
# 
# 	uint streamingMultiprocessorId;
# 	asm("mov.u32 %0, %smid;" : "=r"(streamingMultiprocessorId));
# 
# 	uint warpId;
# 	asm volatile ("mov.u32 %0, %warpid;" : "=r"(warpId));
# 
# 	uint laneId;
# 	asm volatile ("mov.u32 %0, %laneid;" : "=r"(laneId));
# 
# 	printf("SM: %d | Warp: %d | Lane: %d | Thread %d - Here!\n", streamingMultiprocessorId, warpId, laneId, threadIndex);
# }
# 
# int main() {
# 	warp_roll_call<<<1, 39>>>();
# 	cudaDeviceSynchronize();
# 	return 0;
# }

! ncu --version

!ncu --set=full -f -o cuda_day_06 ./cuda_day_06

!ncu --import cuda_day_06.ncu-rep --csv > cuda_day_06.csv

import pandas as pd

# Load the CSV file into Pandas
df = pd.read_csv("cuda_day_06.csv")

# Display the first few rows
df

!sudo apt-get install python3-pybind11

